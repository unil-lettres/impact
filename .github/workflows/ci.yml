name: ci
on: [push, pull_request]
env:
  MAIL_HOST: ${{ secrets.MAIL_HOST }}
  MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
  CI: gha

jobs:
  test:
    name: PHP${{ matrix.php-versions }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        php-versions: [ '8.4' ]
        composer-version: [ '2.8' ]
        mariadb-version: [ '11.4' ]
        node-version: [ '22' ]

    services:
      mariadb:
        image: mariadb:${{ matrix.mariadb-version }}
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: impact
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node Setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: PHP Setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
          tools: composer:${{ matrix.composer-version }}

      - name: Show PHP version
        run: php -v

      - name: Cache composer
        uses: actions/cache@v4
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Build app
        id: app-build
        working-directory: ./site
        run: ./ci-setup.sh

      - name: Check PHP code style
        id: app-php-style
        working-directory: ./site
        run: ./vendor/bin/pint --test -v
        continue-on-error: true

      # Lock Chrome version to fix the issue where chrome returns immediately after a page visit, as opposed to waiting
      # for the request to complete.
      # TODO: remove as soon as this is fixed by a new version of chrome.
      - name: Remove image-bundled Chrome
        run: sudo apt-get purge -y google-chrome-stable
      - name: Install stable Chrome and matching Chromedriver
        run: |
          CHROME_VERSION=133.0.6943.141
          wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION}-1_amd64.deb
          sudo apt install -y ./google-chrome-stable_${CHROME_VERSION}-1_amd64.deb
          rm google-chrome-stable_${CHROME_VERSION}-1_amd64.deb
          wget -N https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROME_VERSION}/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          rm -rf chromedriver-linux64 chromedriver-linux64.zip
      - name: Check Google Chrome & Driver Versions
        run: |
          google-chrome --version
          chromedriver --version

      - name: Install Chrome driver
        working-directory: ./site
        run: php artisan dusk:chrome-driver --detect

      - name: Start Chrome driver
        working-directory: ./site
        run: ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &

      - name: Run Laravel server
        working-directory: ./site
        run: php artisan serve --no-reload &

      - name: Execute browser tests
        id: app-test-browser
        working-directory: ./site
        run: php artisan dusk

      - name: Execute unit/feature tests
        id: app-test-unit
        working-directory: ./site
        run: php artisan test

      - name: Screenshots of failed tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-failed-tests-${{ matrix.php-versions }}
          path: site/tests/Browser/screenshots

      - name: Logs of failed tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-failed-tests-${{ matrix.php-versions }}
          path: site/storage/logs
